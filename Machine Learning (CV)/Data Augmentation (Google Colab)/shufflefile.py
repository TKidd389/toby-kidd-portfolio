# -*- coding: utf-8 -*-
"""ShuffleFile.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yb8fKfje5saBnfauVHq1g_EPahpPbVh7
"""

import numpy as np
a = np.array([1,2,3,4,5])
print(a)

a = np.repeat(a,3)
print(a)

a = np.tile(a, (3,))

print(a)

asdf = np.array([[1,2,3],[4,5,6],[7,8,9]])
np.mean(asdf, axis=0)

"""# Import Packages"""

import numpy as np
from google.colab import drive
import math

"""# Load Dataset"""

drive.mount('/content/drive')

simulationFile = "augmented_resized_Maps_Mtot_Nbody_SIMBA_LH_z=0.00.npy"
parametersFile = "params_LH_Nbody_SIMBA.txt"

def createDatasets(filename):
  fgrids = '/content/drive/MyDrive/ColabNotebooks/' + filename
  grids  = np.load(fgrids)#, mmap_mode='r')
  return grids

dataset = createDatasets(simulationFile)

def preprocess_image(image):
  image = np.log(image)
  image /= np.max(image)
  return image

dataset = preprocess_image(dataset)

len(dataset[0])
xImageRes = dataset.shape[-1]
yImageRes = dataset.shape[-2]
print(xImageRes, yImageRes)

print(np.max(dataset))

"""## Parameters"""

parameters = np.array(["Omega_m", "sigma_8", "A_SN1", "A_SN2", "A_AGN1", "A_AGN2"])

def getParamArrays(filename):
  filepath = '/content/drive/MyDrive/ColabNotebooks/' + filename
  with open(filepath, 'r') as file:
    paramArray = [line.split() for line in file]
  return paramArray

omegaParamArray = getParamArrays(parametersFile)
omegaParamArray = np.array(omegaParamArray, dtype=float)

print(omegaParamArray)

print(omegaParamArray.shape)

# Repeat each row three times
omegaParamArray = np.repeat(omegaParamArray, 15, axis=0)

print(len(omegaParamArray))

# Tile the original array three times
omegaParamArray = np.tile(omegaParamArray, (2, 1))

print(omegaParamArray)

"""
omegaParamArray = getParamArrays(parametersFile)

omegaParamArray = np.repeat(omegaParamArray,15)

omegaParamArray = np.tile(omegaParamArray, (3,))

omegaParamArray = np.array(omegaParamArray, dtype=float)
"""

print(omegaParamArray)

print(len(omegaParamArray))
print(omegaParamArray.shape)
print(len(dataset))

if len(omegaParamArray) != len(dataset):
  raise Exception("Arrays are not the same length")

print(omegaParamArray[0:16])

"""## Test"""

np.where(np.all(omegaParamArray==omegaParamArray[0], axis=1))

"""## Shuffle"""

# Combine data and labels into a single array
combined = list(zip(dataset, omegaParamArray))

# Shuffle the combined list
np.random.shuffle(combined)

# Unpack the shuffled list back into data and labels
shuffled_data, shuffled_labels = zip(*combined)

# Convert back to NumPy arrays
shuffled_data = np.array(shuffled_data)
shuffled_labels = np.array(shuffled_labels)

"""## Test 2"""

index = np.where(np.all(shuffled_data == dataset[200], axis=(1,2)))
print(index[0][0])

if np.all(shuffled_labels[index[0][0]] == omegaParamArray[200]):
  print("Shuffle Match")
else:
  raise "Shuffle Mismatch"

"""## Save"""

np.save('/content/drive/MyDrive/ColabNotebooks/shuffled_augmented_resized_Maps_Mtot_Nbody_SIMBA_LH_z=0.00.npy', shuffled_data)

np.save('/content/drive/MyDrive/ColabNotebooks/shuffled_augmented_resized_params_LH_Nbody_SIMBA.npy', shuffled_labels)