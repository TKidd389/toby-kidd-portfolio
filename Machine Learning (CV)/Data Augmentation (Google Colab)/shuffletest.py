# -*- coding: utf-8 -*-
"""ShuffleTest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VG_SlbEqsD-X2Yf95RS5W_WuSmMkc-RW
"""

import numpy as np
from google.colab import drive
import math

drive.mount('/content/drive')

simulationFile_shuffled = "shuffled_augmented_resized_Maps_Mtot_Nbody_SIMBA_LH_z=0.00.npy" # 45000
parametersFile_shuffled = "shuffled_augmented_resized_params_LH_Nbody_SIMBA.npy" # 45000

simulationFile_augmented = "augmented_resized_Maps_Mtot_Nbody_SIMBA_LH_z=0.00.npy"

simulationFile = "resized_Maps_Mtot_Nbody_SIMBA_LH_z=0.00.npy" # 15000
parametersFile = "params_LH_Nbody_SIMBA.txt" # 1000

"""Take one example:
1.   pick a random value from the parameters file
2.   params[map_number//15] with map number of original simulationFile
3.   find the matching map in the shuffled and its index, and hence its corresponding parameter value
4.   check that the two parameters are the same

### Load files
"""

def createDatasets(filename):
  fgrids = '/content/drive/MyDrive/ColabNotebooks/' + filename
  grids  = np.load(fgrids)#, mmap_mode='r')
  return grids

dataset = createDatasets(simulationFile)
dataset_shuffled = createDatasets(simulationFile_shuffled)
dataset_augmented = createDatasets(simulationFile_augmented)

def preprocess_image(image):
  image = np.log(image)
  image /= np.max(image)
  return image

dataset = preprocess_image(dataset)
dataset_augmented = preprocess_image(dataset_augmented)

def getParamArrays(filename, param):
  filepath = '/content/drive/MyDrive/ColabNotebooks/' + filename
  with open(filepath, 'r') as file:
    paramArray = [line.split()[0] for line in file]
  return paramArray

parameters = np.array(["Omega_m", "sigma_8", "A_SN1", "A_SN2", "A_AGN1", "A_AGN2"])

omegaParamArray = getParamArrays(parametersFile, "Omega_m")
omegaParamArray = np.array(omegaParamArray, dtype=float)
omegaParamArray_shuffled = createDatasets(parametersFile_shuffled)

"""### Augmented and Resize check"""

np.all(dataset == dataset_augmented[0:15000])

np.where(np.all(dataset_augmented == dataset[0], axis=(1,2)))

"""### Random map"""

value = 30

indice = np.where(np.all(dataset_shuffled == dataset[value], axis=(1,2)))

print(value, indice)
dataset[value].shape

print(omegaParamArray[value//15] == omegaParamArray_shuffled[indice[0]])

print(omegaParamArray[value//15])

omegaParamArray_shuffled[indice[0]]